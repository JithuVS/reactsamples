{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Hoc(props) {\n  _s();\n\n  const [completed, setCompletedTask] = useState(props.completedArray);\n  const [progress, setProgressTask] = useState(props.pendingArray);\n\n  const onDragStart = (ev, id) => {\n    console.log(\"dragstart:\", id);\n    ev.dataTransfer.setData(\"id\", id);\n  };\n\n  const onDragOver = ev => {\n    ev.preventDefault();\n  };\n\n  const onDrop = (ev, cat) => {\n    let id = ev.dataTransfer.getData(\"id\");\n    let tasks = progress.filter(task => {\n      if (task.name === id) {\n        return task;\n      }\n    });\n    setCompletedTask([...completed, ...tasks]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Hoc, \"Hpr4XIC2f1EfG0GdZdcK1sIXAh4=\");\n\n_c = Hoc;\nexport default Hoc;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hoc\");","map":{"version":3,"sources":["/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/hoc/Hoc.js"],"names":["useState","Hoc","props","completed","setCompletedTask","completedArray","progress","setProgressTask","pendingArray","onDragStart","ev","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasks","filter","task","name"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,gBAAZ,IAAgCJ,QAAQ,CAACE,KAAK,CAACG,cAAP,CAA9C;AACA,QAAM,CAACC,QAAD,EAAWC,eAAX,IAA8BP,QAAQ,CAACE,KAAK,CAACM,YAAP,CAA5C;;AAEA,QAAMC,WAAW,GAAG,CAACC,EAAD,EAAKC,EAAL,KAAY;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,EAA1B;AACAD,IAAAA,EAAE,CAACI,YAAH,CAAgBC,OAAhB,CAAwB,IAAxB,EAA8BJ,EAA9B;AACD,GAHD;;AAKA,QAAMK,UAAU,GAAIN,EAAD,IAAQ;AACzBA,IAAAA,EAAE,CAACO,cAAH;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAG,CAACR,EAAD,EAAKS,GAAL,KAAa;AAC1B,QAAIR,EAAE,GAAGD,EAAE,CAACI,YAAH,CAAgBM,OAAhB,CAAwB,IAAxB,CAAT;AACA,QAAIC,KAAK,GAAGf,QAAQ,CAACgB,MAAT,CAAiBC,IAAD,IAAU;AACpC,UAAIA,IAAI,CAACC,IAAL,KAAcb,EAAlB,EAAsB;AACpB,eAAOY,IAAP;AACD;AACF,KAJW,CAAZ;AAKAnB,IAAAA,gBAAgB,CAAC,CAAC,GAAGD,SAAJ,EAAe,GAAGkB,KAAlB,CAAD,CAAhB;AACD,GARD;;AAUA,sBAAO,qCAAP;AACD;;GAxBQpB,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\n\nfunction Hoc(props) {\n  const [completed, setCompletedTask] = useState(props.completedArray);\n  const [progress, setProgressTask] = useState(props.pendingArray);\n\n  const onDragStart = (ev, id) => {\n    console.log(\"dragstart:\", id);\n    ev.dataTransfer.setData(\"id\", id);\n  };\n\n  const onDragOver = (ev) => {\n    ev.preventDefault();\n  };\n\n  const onDrop = (ev, cat) => {\n    let id = ev.dataTransfer.getData(\"id\");\n    let tasks = progress.filter((task) => {\n      if (task.name === id) {\n        return task;\n      }\n    });\n    setCompletedTask([...completed, ...tasks]);\n  };\n\n  return <></>;\n}\n\nexport default Hoc;\n"]},"metadata":{},"sourceType":"module"}