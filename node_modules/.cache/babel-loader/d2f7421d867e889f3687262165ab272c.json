{"ast":null,"code":"var _jsxFileName = \"/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/api/Api.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiUrl = {\n  tt: \"\",\n  bt: \"\",\n  id: \"\",\n  img: \"agnes\"\n};\n\nfunction Api() {\n  _s();\n\n  const [request, setRequest] = useState(apiUrl),\n        [error, setError] = useState(false),\n        [loading, setLoading] = useState(false),\n        [generated, setGenerated] = useState(null),\n        [images, setImages] = useState(null);\n  useEffect(() => {\n    debugger;\n    getMemes();\n  }, []);\n\n  const getMemes = () => {\n    axios.get(\"https://api.memegen.link/images\").then(response => {\n      let data = response.data;\n\n      if (data) {\n        setImages(data.slice(2, 8));\n        setGenerated(data[3].url);\n      }\n    });\n  };\n\n  const click = e => {\n    e.preventDefault();\n    setRequest({ ...request,\n      id: e.target.id,\n      img: e.target.id.split(\"/\")[4]\n    });\n  };\n\n  const blur = e => {\n    let id = e.target.id,\n        value = e.target.value,\n        tt = request.tt,\n        bt = request.bt;\n\n    if (id === \"toptxt\") {\n      tt = value;\n    } else {\n      bt = value;\n    }\n\n    setRequest({ ...request,\n      tt: tt,\n      bt: bt\n    });\n  };\n\n  const clickGenerate = e => {\n    let reqArray = Object.values(request);\n\n    if (reqArray[0] && reqArray[1] && reqArray[2]) {\n      setLoading(true);\n      setError(false);\n      axios.get(`https://api.memegen.link/images/${reqArray[3]}/${reqArray[0]}/${reqArray[1]}.jpg`).then(response => {\n        setGenerated(response.config.url);\n        setLoading(false);\n      }).catch(error => {\n        setLoading(false);\n      });\n    } else {\n      setError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" API Call \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: error ? \"red\" : \"blue\"\n      },\n      children: \"Enter all three fields!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        style: {\n          width: \"50%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            paddingTop: \"2%\",\n            textAlign: \"left\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"toptxt\",\n            children: \" Top \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"fields\",\n            type: \"text\",\n            id: \"toptxt\",\n            placeholder: \"Top text\",\n            onBlur: blur,\n            \"data-testid\": \"toptxt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bottomtxt\",\n            children: \" Bottom \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"fields\",\n            type: \"text\",\n            id: \"bottomtxt\",\n            placeholder: \"Bottom text\",\n            onBlur: blur,\n            \"data-testid\": \"bottomtxt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        style: {\n          width: \"50%\"\n        },\n        className: \"flexwrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \" Choose \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexwrap\",\n          onClick: click,\n          children: images ? images.map((i, j) => {\n            const color = request.id === i.url ? \"blue\" : \"black\";\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: `meme${j}`,\n              className: \"imageFrame\",\n              style: {\n                borderColor: color\n              },\n              id: i.url,\n              src: i.url,\n              \"data-testid\": `meme${j}`\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 21\n            }, this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttons\",\n      onClick: clickGenerate,\n      style: {\n        width: \"40%\",\n        margin: \"2%\",\n        padding: \"5px\"\n      },\n      \"data-testid\": \"generate\",\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"loading\",\n        children: \" Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        \"data-testid\": \"generatedImage\",\n        src: generated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: generated ? null : \"No images Loaded!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Api, \"MP03PCdQlGxf5MU3qWBqk34P910=\");\n\n_c = Api;\nexport default Api;\n\nvar _c;\n\n$RefreshReg$(_c, \"Api\");","map":{"version":3,"sources":["/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/api/Api.js"],"names":["useState","useEffect","axios","apiUrl","tt","bt","id","img","Api","request","setRequest","error","setError","loading","setLoading","generated","setGenerated","images","setImages","getMemes","get","then","response","data","slice","url","click","e","preventDefault","target","split","blur","value","clickGenerate","reqArray","Object","values","config","catch","color","width","paddingTop","textAlign","map","i","j","borderColor","margin","padding"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst apiUrl = {\n  tt: \"\",\n  bt: \"\",\n  id: \"\",\n  img: \"agnes\",\n};\n\nfunction Api() {\n  const [request, setRequest] = useState(apiUrl),\n    [error, setError] = useState(false),\n    [loading, setLoading] = useState(false),\n    [generated, setGenerated] = useState(null),\n    [images, setImages] = useState(null);\n\n  useEffect(() => {\n    debugger;\n    getMemes();\n  }, []);\n\n  const getMemes = () => {\n    axios.get(\"https://api.memegen.link/images\").then((response) => {\n      let data = response.data;\n      if (data) {\n        setImages(data.slice(2, 8));\n        setGenerated(data[3].url);\n      }\n    });\n  };\n\n  const click = (e) => {\n    e.preventDefault();\n    setRequest({\n      ...request,\n      id: e.target.id,\n      img: e.target.id.split(\"/\")[4],\n    });\n  };\n  const blur = (e) => {\n    let id = e.target.id,\n      value = e.target.value,\n      tt = request.tt,\n      bt = request.bt;\n    if (id === \"toptxt\") {\n      tt = value;\n    } else {\n      bt = value;\n    }\n    setRequest({\n      ...request,\n      tt: tt,\n      bt: bt,\n    });\n  };\n\n  const clickGenerate = (e) => {\n    let reqArray = Object.values(request);\n    if (reqArray[0] && reqArray[1] && reqArray[2]) {\n      setLoading(true);\n      setError(false);\n      axios\n        .get(\n          `https://api.memegen.link/images/${reqArray[3]}/${reqArray[0]}/${reqArray[1]}.jpg`\n        )\n        .then((response) => {\n          setGenerated(response.config.url);\n          setLoading(false);\n        })\n        .catch((error) => {\n          setLoading(false);\n        });\n    } else {\n      setError(true);\n    }\n  };\n\n  return (\n    <>\n      <h4> API Call </h4>\n      <div\n        style={{\n          color: error ? \"red\" : \"blue\",\n        }}\n      >\n        Enter all three fields!\n      </div>\n      <div className=\"section\">\n        <fieldset\n          style={{\n            width: \"50%\",\n          }}\n        >\n          <legend>Enter</legend>\n          <form\n            style={{\n              paddingTop: \"2%\",\n              textAlign: \"left\",\n            }}\n          >\n            <label htmlFor=\"toptxt\"> Top </label>\n            <br></br>\n            <input\n              className=\"fields\"\n              type=\"text\"\n              id=\"toptxt\"\n              placeholder=\"Top text\"\n              onBlur={blur}\n              data-testid=\"toptxt\"\n            ></input>\n\n            <br></br>\n            <label htmlFor=\"bottomtxt\"> Bottom </label>\n            <br></br>\n            <input\n              className=\"fields\"\n              type=\"text\"\n              id=\"bottomtxt\"\n              placeholder=\"Bottom text\"\n              onBlur={blur}\n              data-testid=\"bottomtxt\"\n            ></input>\n          </form>\n        </fieldset>\n\n        <fieldset\n          style={{\n            width: \"50%\",\n          }}\n          className=\"flexwrap\"\n        >\n          <legend> Choose </legend>\n          <div className=\"flexwrap\" onClick={click}>\n            {images\n              ? images.map((i, j) => {\n                  const color = request.id === i.url ? \"blue\" : \"black\";\n                  return (\n                    <img\n                      alt={`meme${j}`}\n                      key={j}\n                      className=\"imageFrame\"\n                      style={{\n                        borderColor: color,\n                      }}\n                      id={i.url}\n                      src={i.url}\n                      data-testid={`meme${j}`}\n                    ></img>\n                  );\n                })\n              : null}\n          </div>\n        </fieldset>\n      </div>\n      <button\n        className=\"buttons\"\n        onClick={clickGenerate}\n        style={{\n          width: \"40%\",\n          margin: \"2%\",\n          padding: \"5px\",\n        }}\n        data-testid=\"generate\"\n      >\n        Generate\n      </button>\n\n      <div>\n        {loading ? (\n          <div data-testid=\"loading\"> Loading... </div>\n        ) : (\n          <img data-testid=\"generatedImage\" src={generated}></img>\n        )}\n        <div>{generated ? null : \"No images Loaded!\"}</div>\n      </div>\n    </>\n  );\n}\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}