{"ast":null,"code":"var _jsxFileName = \"/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst completedArray = [{\n  name: \"One\",\n  category: \"complete\",\n  bgcolor: \"skyblue\"\n}];\nconst pendingArray = [{\n  name: \"Two\",\n  category: \"progress\",\n  bgcolor: \"yellow\"\n}, {\n  name: \"Three\",\n  category: \"progress\",\n  bgcolor: \"pink\"\n}];\n\nfunction App() {\n  _s();\n\n  const [completed, setCompletedTask] = useState(completedArray);\n  const [progress, setProgressTask] = useState(pendingArray);\n\n  const onDragStart = (ev, id) => {\n    console.log('dragstart:', id);\n    ev.dataTransfer.setData(\"id\", id);\n  };\n\n  const onDragOver = ev => {\n    ev.preventDefault();\n  };\n\n  const onDrop = (ev, cat) => {\n    let id = ev.dataTransfer.getData(\"id\");\n    let tasks = progress.filter(task => {\n      if (task.name == id) {\n        task.category = cat;\n        return task;\n      }\n    });\n    debugger;\n    setCompletedTask([...completed, ...tasks]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      onDragOver: e => onDragOver(e),\n      onDrop: e => {\n        onDrop(e, \"progress\");\n      },\n      children: [\"first\", progress.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragStart: e => onDragStart(e, t.name),\n        draggable: true,\n        className: \"draggable\",\n        style: {\n          backgroundColor: t.bgcolor\n        },\n        children: t.name\n      }, t.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"complete\",\n      onDragOver: e => onDragOver(e),\n      onDrop: e => onDrop(e, \"complete\"),\n      children: [\"second\", completed.map(t => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onDragStart: e => onDragStart(e, t.name),\n          draggable: true,\n          className: \"draggable\",\n          style: {\n            backgroundColor: t.bgcolor\n          },\n          children: t.name\n        }, t.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rSZdoQ8w+kPbSUmwmSs4Z/4/pFg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/App.js"],"names":["useEffect","useState","completedArray","name","category","bgcolor","pendingArray","App","completed","setCompletedTask","progress","setProgressTask","onDragStart","ev","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasks","filter","task","e","map","t","backgroundColor"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useEffect, useState} from 'react';\n\nconst completedArray = [\n  {name:\"One\", category:\"complete\", bgcolor:\"skyblue\"}\n];\n\nconst pendingArray = [\n  {name:\"Two\",category:\"progress\", bgcolor: \"yellow\"},\n  {name:\"Three\", category:\"progress\", bgcolor:\"pink\"}\n];\n\nfunction App() {\n  const [completed, setCompletedTask] = useState(completedArray);\n  const [progress, setProgressTask] = useState(pendingArray);\n \n  const onDragStart = (ev, id) => {\n    console.log('dragstart:',id);\n    ev.dataTransfer.setData(\"id\", id);\n    }\n\n    const onDragOver = (ev) => {\n        ev.preventDefault();\n    }\n\n    const onDrop = (ev, cat) => {\n      let id = ev.dataTransfer.getData(\"id\");\n      \n      let tasks = progress.filter((task) => {\n          if (task.name == id) {\n              task.category = cat;\n              return task;\n          }\n      });\n      debugger;\n      setCompletedTask([...completed,...tasks]);\n      \n    }\n\n  return (\n    <div>\n        <div className=\"progress\" onDragOver={(e)=>onDragOver(e)}\n                    onDrop={(e)=>{onDrop(e, \"progress\")}}>\n              first\n              {\n              progress.map ((t) =>\n                  <div key={t.name}\n                      onDragStart = {(e) => onDragStart(e, t.name)}\n                      draggable\n                      className=\"draggable\"\n                      style = {{backgroundColor: t.bgcolor}}>\n                      {t.name}\n                  </div>\n              )     \n             }\n        </div>\n\n        <div className=\"complete\" \n                    onDragOver={(e)=>onDragOver(e)}\n                    onDrop={(e)=>onDrop(e, \"complete\")}> \n              second\n              {\n              completed.map ((t) => {\n                  return (<div key={t.name}\n                      onDragStart = {(e) => onDragStart(e, t.name)}\n                      draggable\n                      className=\"draggable\"\n                      style = {{backgroundColor: t.bgcolor}}>\n                      {t.name}\n                  </div>);\n              }\n              )     \n             }\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}