{"ast":null,"code":"var _jsxFileName = \"/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/hoc/Hoc.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst horizontal = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\"\n};\nconst vertical = {};\n\nfunction Hoc(props) {\n  _s();\n\n  const [completed, setCompletedTask] = useState(props.completedArray);\n  const [progress, setProgressTask] = useState(props.pendingArray);\n\n  const onDragStart = (ev, id) => {\n    console.log(\"dragstart:\", id);\n    ev.dataTransfer.setData(\"id\", id);\n  };\n\n  const onDragOver = ev => {\n    ev.preventDefault();\n  };\n\n  const onDrop = (ev, cat) => {\n    let id = ev.dataTransfer.getData(\"id\");\n    let tasks = progress.filter(task => {\n      if (task.name === id) {\n        return task;\n      }\n    });\n    setCompletedTask([...completed, ...tasks]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Drag Drop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        onDragOver: e => onDragOver(e),\n        onDrop: e => {\n          onDrop(e, \"progress\");\n        },\n        children: progress.map((t, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onDragStart: e => onDragStart(e, t.name),\n          draggable: true,\n          className: \"draggable\",\n          style: {\n            backgroundColor: t.bgcolor\n          },\n          children: t.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"complete\",\n        style: props.horizontal ? horizontal : vertical,\n        onDragOver: e => onDragOver(e),\n        onDrop: e => onDrop(e, \"complete\"),\n        children: completed.map((t, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onDragStart: e => onDragStart(e, t.name),\n            draggable: true,\n            className: \"draggable\",\n            style: {\n              backgroundColor: t.bgcolor\n            },\n            children: t.name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Hoc, \"Hpr4XIC2f1EfG0GdZdcK1sIXAh4=\");\n\n_c = Hoc;\nexport default Hoc;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hoc\");","map":{"version":3,"sources":["/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/hoc/Hoc.js"],"names":["useState","horizontal","display","flexDirection","flexWrap","vertical","Hoc","props","completed","setCompletedTask","completedArray","progress","setProgressTask","pendingArray","onDragStart","ev","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasks","filter","task","name","e","map","t","i","backgroundColor","bgcolor"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nconst horizontal = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n};\n\nconst vertical = {};\n\nfunction Hoc(props) {\n  const [completed, setCompletedTask] = useState(props.completedArray);\n  const [progress, setProgressTask] = useState(props.pendingArray);\n\n  const onDragStart = (ev, id) => {\n    console.log(\"dragstart:\", id);\n    ev.dataTransfer.setData(\"id\", id);\n  };\n\n  const onDragOver = (ev) => {\n    ev.preventDefault();\n  };\n\n  const onDrop = (ev, cat) => {\n    let id = ev.dataTransfer.getData(\"id\");\n    let tasks = progress.filter((task) => {\n      if (task.name === id) {\n        return task;\n      }\n    });\n    setCompletedTask([...completed, ...tasks]);\n  };\n\n  return (\n    <>\n      <h4>Drag Drop</h4>\n      <div className=\"section\">\n        <div\n          className=\"progress\"\n          onDragOver={(e) => onDragOver(e)}\n          onDrop={(e) => {\n            onDrop(e, \"progress\");\n          }}\n        >\n          {progress.map((t, i) => (\n            <div\n              key={i}\n              onDragStart={(e) => onDragStart(e, t.name)}\n              draggable\n              className=\"draggable\"\n              style={{ backgroundColor: t.bgcolor }}\n            >\n              {t.name}\n            </div>\n          ))}\n        </div>\n        <div\n          className=\"complete\"\n          style={props.horizontal ? horizontal : vertical}\n          onDragOver={(e) => onDragOver(e)}\n          onDrop={(e) => onDrop(e, \"complete\")}\n        >\n          {completed.map((t, i) => {\n            return (\n              <div\n                key={i}\n                onDragStart={(e) => onDragStart(e, t.name)}\n                draggable\n                className=\"draggable\"\n                style={{ backgroundColor: t.bgcolor }}\n              >\n                {t.name}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Hoc;\n"]},"metadata":{},"sourceType":"module"}