{"ast":null,"code":"var _jsxFileName = \"/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/components/Api.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport userEvent from '@testing-library/user-event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = `http://apimeme.com/meme?meme=1&top=2&bottom=3`,\n      imageArray = ['Advice-Doge', 'Angry-Birds-Pig', 'Baby-Godfather', 'Close-Enough'],\n      apiUrl = {\n  tt: '',\n  bt: '',\n  id: '',\n  img: ''\n};\n\nfunction Api() {\n  _s();\n\n  const [request, setRequest] = useState(apiUrl),\n        [error, setError] = useState(false),\n        [generated, setGenerated] = useState(null),\n        [images, setImages] = useState(null);\n  useEffect(() => {\n    axios.get('https://api.memegen.link/images').then(response => {\n      setImages(response.data.slice(2, 8));\n    });\n  }, []);\n\n  const click = e => {\n    setRequest({ ...request,\n      id: e.target.id,\n      img: e.target.id.split('/')[4]\n    });\n  };\n\n  const blur = e => {\n    let id = e.target.id,\n        value = e.target.value,\n        tt = request.tt,\n        bt = request.bt;\n\n    if (id == 'toptxt') {\n      tt = value;\n    } else {\n      bt = value;\n    }\n\n    setRequest({ ...request,\n      tt: tt,\n      bt: bt\n    });\n  };\n\n  const clickGenerate = e => {\n    let reqArray = Object.values(request);\n\n    if (reqArray[0] && reqArray[1] && reqArray[2]) {\n      setError(false);\n      axios.get(`https://api.memegen.link/images/${reqArray[3]}/${reqArray[0]}/${reqArray[1]}.jpg`).then(response => {\n        setGenerated(response.config.url);\n      }).catch(error => {});\n    } else {\n      setError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"API Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: error ? 'red' : 'blue'\n      },\n      children: \"Enter all three fields!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            paddingTop: '2%',\n            textAlign: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"toptxt\",\n            children: \"Top \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"toptxt\",\n            placeholder: \"Top text\",\n            onBlur: blur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bottomtxt\",\n            children: \"Bottom \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"bottomtxt\",\n            placeholder: \"Bottom text\",\n            onBlur: blur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        style: {\n          width: '50%'\n        },\n        className: \"flexwrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Choose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexwrap\",\n          onClick: click,\n          children: images ? images.map((i, j) => {\n            const color = request.id == i.url ? 'blue' : 'black';\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"imageFrame\",\n              style: {\n                borderColor: color\n              },\n              id: i.url,\n              src: i.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 18\n            }, this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttons\",\n      onClick: clickGenerate,\n      style: {\n        width: '40%',\n        margin: '2%',\n        padding: '5px'\n      },\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"Generated\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: generated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Api, \"IvmrMgyKt+jIE2aY6RKOZEMvMmk=\");\n\n_c = Api;\nexport default Api;\n\nvar _c;\n\n$RefreshReg$(_c, \"Api\");","map":{"version":3,"sources":["/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/components/Api.js"],"names":["useState","useEffect","axios","userEvent","api","imageArray","apiUrl","tt","bt","id","img","Api","request","setRequest","error","setError","generated","setGenerated","images","setImages","get","then","response","data","slice","click","e","target","split","blur","value","clickGenerate","reqArray","Object","values","config","url","catch","color","width","paddingTop","textAlign","map","i","j","borderColor","margin","padding","message"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;;AAEA,MAAMC,GAAG,GAAI,+CAAb;AAAA,MACAC,UAAU,GAAE,CAAC,aAAD,EAAgB,iBAAhB,EAAmC,gBAAnC,EAAqD,cAArD,CADZ;AAAA,MAEAC,MAAM,GAAG;AAACC,EAAAA,EAAE,EAAC,EAAJ;AAAOC,EAAAA,EAAE,EAAC,EAAV;AAAaC,EAAAA,EAAE,EAAC,EAAhB;AAAmBC,EAAAA,GAAG,EAAC;AAAvB,CAFT;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAACM,MAAD,CAAtC;AAAA,QACA,CAACQ,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,KAAD,CAD5B;AAAA,QAEA,CAACgB,SAAD,EAAWC,YAAX,IAA2BjB,QAAQ,CAAC,IAAD,CAFnC;AAAA,QAGA,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,IAAD,CAH9B;AAMAC,EAAAA,SAAS,CAAC,MAAK;AACbC,IAAAA,KAAK,CAACkB,GAAN,CAAU,iCAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChBH,MAAAA,SAAS,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAsB,CAAtB,CAAD,CAAT;AACD,KAHD;AAID,GALQ,EAKP,EALO,CAAT;;AAOA,QAAMC,KAAK,GAAIC,CAAD,IAAO;AACnBb,IAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaH,MAAAA,EAAE,EAAEiB,CAAC,CAACC,MAAF,CAASlB,EAA1B;AAA8BC,MAAAA,GAAG,EAAEgB,CAAC,CAACC,MAAF,CAASlB,EAAT,CAAYmB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB;AAAnC,KAAD,CAAV;AACD,GAFD;;AAIA,QAAMC,IAAI,GAAIH,CAAD,IAAO;AAClB,QAAIjB,EAAE,GAAGiB,CAAC,CAACC,MAAF,CAASlB,EAAlB;AAAA,QAAsBqB,KAAK,GAAGJ,CAAC,CAACC,MAAF,CAASG,KAAvC;AAAA,QAA8CvB,EAAE,GAAGK,OAAO,CAACL,EAA3D;AAAA,QAA+DC,EAAE,GAAGI,OAAO,CAACJ,EAA5E;;AACA,QAAGC,EAAE,IAAI,QAAT,EAAmB;AACjBF,MAAAA,EAAE,GAAGuB,KAAL;AACD,KAFD,MAEK;AACHtB,MAAAA,EAAE,GAAGsB,KAAL;AACD;;AACDjB,IAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAYL,MAAAA,EAAE,EAAEA,EAAhB;AAAoBC,MAAAA,EAAE,EAACA;AAAvB,KAAD,CAAV;AACD,GARD;;AAUA,QAAMuB,aAAa,GAAIL,CAAD,IAAO;AAC3B,QAAIM,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAActB,OAAd,CAAf;;AACA,QAAGoB,QAAQ,CAAC,CAAD,CAAR,IAAeA,QAAQ,CAAC,CAAD,CAAvB,IAA8BA,QAAQ,CAAC,CAAD,CAAzC,EAA6C;AAC3CjB,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAb,MAAAA,KAAK,CAACkB,GAAN,CAAW,mCAAkCY,QAAQ,CAAC,CAAD,CAAI,IAAGA,QAAQ,CAAC,CAAD,CAAI,IAAGA,QAAQ,CAAC,CAAD,CAAI,MAAvF,EACCX,IADD,CAEAC,QAAQ,IAAI;AACNL,QAAAA,YAAY,CAACK,QAAQ,CAACa,MAAT,CAAgBC,GAAjB,CAAZ;AACL,OAJD,EAKCC,KALD,CAMEvB,KAAK,IAAI,CAER,CARH;AAUD,KAZD,MAYK;AACHC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAjBD;;AAmBA,sBAAQ;AAAA,4BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAEJ;AAAK,MAAA,KAAK,EAAE;AAACuB,QAAAA,KAAK,EAAExB,KAAK,GAAG,KAAH,GAAW;AAAxB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFI,eAGJ;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAU,QAAA,KAAK,EAAE;AAACyB,UAAAA,KAAK,EAAE;AAAR,SAAjB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,KAAK,EAAE;AAACC,YAAAA,UAAU,EAAE,IAAb;AAAmBC,YAAAA,SAAS,EAAE;AAA9B,WAAb;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eACsC;AAAA;AAAA;AAAA;AAAA,kBADtC,eAEE;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,QAAtB;AAA+B,YAAA,WAAW,EAAC,UAA3C;AAAsD,YAAA,MAAM,EAAEZ;AAA9D;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAO,YAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,EAAE,EAAC,WAAtB;AAAkC,YAAA,WAAW,EAAC,aAA9C;AAA4D,YAAA,MAAM,EAAEA;AAApE;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAU,QAAA,KAAK,EAAE;AAACU,UAAAA,KAAK,EAAE;AAAR,SAAjB;AAAiC,QAAA,SAAS,EAAC,UAA3C;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,OAAO,EAAEd,KAAnC;AAAA,oBACCP,MAAM,GAAGA,MAAM,CAACwB,GAAP,CAAW,CAACC,CAAD,EAAGC,CAAH,KAAS;AAC5B,kBAAMN,KAAK,GAAG1B,OAAO,CAACH,EAAR,IAAckC,CAAC,CAACP,GAAhB,GAAsB,MAAtB,GAA+B,OAA7C;AACA,gCAAO;AAAK,cAAA,SAAS,EAAC,YAAf;AAA4B,cAAA,KAAK,EAAE;AAACS,gBAAAA,WAAW,EAAEP;AAAd,eAAnC;AAAyD,cAAA,EAAE,EAAEK,CAAC,CAACP,GAA/D;AAAoE,cAAA,GAAG,EAAEO,CAAC,CAACP;AAA3E;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAHS,CAAH,GAGF;AAJL;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHI,eA2BJ;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAA4B,MAAA,OAAO,EAAEL,aAArC;AAAoD,MAAA,KAAK,EAAE;AAACQ,QAAAA,KAAK,EAAE,KAAR;AAAeO,QAAAA,MAAM,EAAE,IAAvB;AAA6BC,QAAAA,OAAO,EAAC;AAArC,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BI,eA6BJ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,GAAG,EAAE/B;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAMgC;AAAN;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BI;AAAA,kBAAR;AAmCC;;GAlFQrC,G;;KAAAA,G;AAoFT,eAAeA,GAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport userEvent from '@testing-library/user-event';\n\nconst api = `http://apimeme.com/meme?meme=1&top=2&bottom=3`,\nimageArray= ['Advice-Doge', 'Angry-Birds-Pig', 'Baby-Godfather', 'Close-Enough'],\napiUrl = {tt:'',bt:'',id:'',img:''};\n\nfunction Api() {\nconst [request, setRequest] = useState(apiUrl),\n[error, setError] = useState(false),\n[generated,setGenerated] = useState(null),\n[images, setImages] = useState(null);\n\n\nuseEffect(()=> {\n  axios.get('https://api.memegen.link/images')\n  .then(response => {\n    setImages(response.data.slice(2,8));\n  })\n},[])\n\nconst click = (e) => {\n  setRequest({...request, id: e.target.id, img: e.target.id.split('/')[4]});\n}\n\nconst blur = (e) => {\n  let id = e.target.id, value = e.target.value, tt = request.tt, bt = request.bt;\n  if(id == 'toptxt') {\n    tt = value;\n  }else{\n    bt = value;\n  }\n  setRequest({...request,tt: tt, bt:bt});\n}\n\nconst clickGenerate = (e) => {\n  let reqArray = Object.values(request);\n  if(reqArray[0] && reqArray[1] && reqArray[2]){\n    setError(false);\n    axios.get(`https://api.memegen.link/images/${reqArray[3]}/${reqArray[0]}/${reqArray[1]}.jpg`)\n    .then(\n    response => {\n          setGenerated(response.config.url);\n    })\n    .catch(\n      error => {\n\n      }\n    )\n  }else{\n    setError(true);\n  }\n}\n\nreturn (<>\n    <h4>API Call</h4>\n    <div style={{color: error ? 'red' : 'blue'}}>Enter all three fields!</div>\n    <div className=\"section\">\n      <fieldset style={{width: '50%'}}>\n        <legend>Create</legend>\n        <form style={{paddingTop: '2%', textAlign: 'left'}}>\n          <label htmlFor=\"toptxt\">Top </label><br></br>\n          <input type=\"text\" id=\"toptxt\" placeholder=\"Top text\" onBlur={blur}></input>\n          <br></br>\n          <label htmlFor=\"bottomtxt\">Bottom </label>\n          <br></br>\n          <input type=\"text\" id=\"bottomtxt\" placeholder=\"Bottom text\" onBlur={blur}></input>\n        </form>\n      </fieldset>\n\n\n      <fieldset style={{width: '50%'}} className='flexwrap' >\n        <legend>Choose</legend>\n        <div className='flexwrap' onClick={click}>\n        {images ? images.map((i,j) => {\n          const color = request.id == i.url ? 'blue' : 'black'; \n          return(<img className='imageFrame' style={{borderColor: color}} id={i.url} src={i.url}></img>);\n        }) : null}\n        </div>\n      </fieldset>\n    </div>\n    <button className='buttons' onClick={clickGenerate} style={{width: '40%', margin: '2%', padding:'5px'}}>Generate</button>\n\n    <fieldset>\n      <legend>Generated</legend>\n      <img src={generated}></img>\n      <div>{message}</div>\n    </fieldset>\n  </>);\n}\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}