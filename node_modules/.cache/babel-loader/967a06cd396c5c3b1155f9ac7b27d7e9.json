{"ast":null,"code":"var _jsxFileName = \"/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/redux/PostList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useRef } from \"react\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PostList() {\n  _s();\n\n  const list = useSelector(state => state),\n        dispatch = useDispatch(),\n        titleRef = useRef(),\n        messageRef = useRef(),\n        [showModal, setShowModal] = useState(false);\n\n  const click = e => {\n    if (e.target.name == \"delete\") {\n      dispatch({\n        type: \"DELETE_POST\",\n        id: e.target.id\n      });\n    } else {\n      const data = list.filter(i => {\n        return i.id == e.target.id;\n      });\n      modalOpen(data);\n    }\n  };\n\n  const handleSubmit = e => {\n    modalClose();\n  };\n\n  const modalOpen = data => {\n    setShowModal(true);\n  };\n\n  const modalClose = () => {\n    setShowModal(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      handleClose: e => modalClose(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: titleRef,\n          className: \"fields\",\n          type: \"text\",\n          id: \"title\",\n          placeholder: \"Title\",\n          name: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: messageRef,\n          className: \"fields\",\n          id: \"message\",\n          placeholder: \"Message\",\n          name: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttons\",\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttons\",\n          onClick: e => handleSubmit(e),\n          type: \"button\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Post List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          onClick: click,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), list.map((post, id) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: post.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: post.id,\n                  name: \"edit\",\n                  className: \"buttons\",\n                  children: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: post.id,\n                  name: \"delete\",\n                  className: \"buttons\",\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, post.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PostList, \"0vYlLUZ+YsX2jZYjG/sPug9Ns9A=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/redux/PostList.js"],"names":["useSelector","useDispatch","useState","useRef","Modal","PostList","list","state","dispatch","titleRef","messageRef","showModal","setShowModal","click","e","target","name","type","id","data","filter","i","modalOpen","handleSubmit","modalClose","display","width","map","post","title","message"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { useState, useRef } from \"react\";\nimport Modal from \"../components/Modal\";\n\nfunction PostList() {\n  const list = useSelector((state) => state),\n    dispatch = useDispatch(),\n    titleRef = useRef(),\n    messageRef = useRef(),\n    [showModal, setShowModal] = useState(false);\n\n  const click = (e) => {\n    if (e.target.name == \"delete\") {\n      dispatch({\n        type: \"DELETE_POST\",\n        id: e.target.id,\n      });\n    } else {\n      const data = list.filter((i) => {\n        return i.id == e.target.id;\n      });\n      modalOpen(data);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    modalClose();\n  };\n\n  const modalOpen = (data) => {\n    setShowModal(true);\n  };\n\n  const modalClose = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <>\n      <Modal show={showModal} handleClose={(e) => modalClose(e)}>\n        <div>\n          <input\n            ref={titleRef}\n            className=\"fields\"\n            type=\"text\"\n            id=\"title\"\n            placeholder=\"Title\"\n            name=\"title\"\n          />\n\n          <textarea\n            ref={messageRef}\n            className=\"fields\"\n            id=\"message\"\n            placeholder=\"Message\"\n            name=\"message\"\n          />\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <button className=\"buttons\">close</button>\n          <button\n            className=\"buttons\"\n            onClick={(e) => handleSubmit(e)}\n            type=\"button\"\n          >\n            Post\n          </button>\n        </div>\n      </Modal>\n      <div className=\"section\">\n        <fieldset style={{ width: \"100%\" }}>\n          <legend>Post List</legend>\n          <table className=\"table\" onClick={click}>\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th>Message</th>\n              </tr>\n            </thead>\n            {list.map((post, id) => {\n              return (\n                <tr key={post.id}>\n                  <td>{post.title}</td>\n                  <td>{post.message}</td>\n                  <td>\n                    <button id={post.id} name=\"edit\" className=\"buttons\">\n                      edit\n                    </button>\n                  </td>\n                  <td>\n                    <button id={post.id} name=\"delete\" className=\"buttons\">\n                      delete\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </table>\n        </fieldset>\n        {/* {showModal ? <Modal></Modal> : null} */}\n      </div>\n    </>\n  );\n}\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}