{"ast":null,"code":"var _jsxFileName = \"/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/components/Api.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst api = `http://apimeme.com/meme?meme=1&top=2&bottom=3`,\n      imageArray = ['Advice-Doge', 'Angry-Birds-Pig', 'Baby-Godfather', 'Close-Enough'],\n      apiUrl = {\n  tt: '',\n  bt: '',\n  img: ''\n};\n\nfunction Api() {\n  _s();\n\n  const [request, setRequest] = useState(apiUrl);\n  const [error, setError] = useState(false);\n\n  const click = e => {\n    setRequest({ ...request,\n      img: e.target.id\n    });\n  };\n\n  const blur = e => {\n    let id = e.target.id,\n        value = e.target.value,\n        tt = request.tt,\n        bt = request.bt;\n\n    if (id == 'toptxt') {\n      tt = value;\n    } else {\n      bt = value;\n    }\n\n    setRequest({ ...request,\n      tt: tt,\n      bt: bt\n    });\n  };\n\n  const clickGenerate = e => {\n    let reqArray = Object.values(request);\n\n    if (reqArray[0] && reqArray[1] && reqArray[2]) {\n      setError(false);\n    } else {\n      setError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"API Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: error ? 'red' : 'blue'\n      },\n      children: \"Enter all three fields!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            paddingTop: '2%',\n            textAlign: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"toptxt\",\n            children: \"Top \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"toptxt\",\n            placeholder: \"Top text\",\n            onBlur: blur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bottomtxt\",\n            children: \"Bottom \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"bottomtxt\",\n            placeholder: \"Bottom text\",\n            onBlur: blur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        style: {\n          width: '50%'\n        },\n        className: \"flexwrap\",\n        onClick: click,\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Choose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), imageArray.map((i, j) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '4%',\n              borderStyle: 'dotted',\n              color: request.img == i ? 'red' : 'black'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              id: i,\n              src: `http://apimeme.com/thumbnail?name=${i}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this)\n          }, j, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 18\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttons\",\n      onClick: clickGenerate,\n      style: {\n        width: '40%',\n        marginTop: '2%',\n        padding: '5px'\n      },\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Api, \"xWaOWdkai3yddFBlSP5OpCUG/i0=\");\n\n_c = Api;\nexport default Api;\n\nvar _c;\n\n$RefreshReg$(_c, \"Api\");","map":{"version":3,"sources":["/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/components/Api.js"],"names":["useState","api","imageArray","apiUrl","tt","bt","img","Api","request","setRequest","error","setError","click","e","target","id","blur","value","clickGenerate","reqArray","Object","values","color","width","paddingTop","textAlign","map","i","j","margin","borderStyle","marginTop","padding"],"mappings":"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","sourcesContent":["import {useState} from 'react';\n\nconst api = `http://apimeme.com/meme?meme=1&top=2&bottom=3`,\nimageArray= ['Advice-Doge', 'Angry-Birds-Pig', 'Baby-Godfather', 'Close-Enough'],\napiUrl = {tt:'',bt:'',img:''};\n\nfunction Api() {\nconst [request, setRequest] = useState(apiUrl);\nconst [error, setError] = useState(false);\n\nconst click = (e) => {\n  setRequest({...request, img: e.target.id});\n}\n\nconst blur = (e) => {\n  let id = e.target.id, value = e.target.value, tt = request.tt, bt = request.bt;\n  if(id == 'toptxt') {\n    tt = value;\n  }else{\n    bt = value;\n  }\n  setRequest({...request,tt: tt, bt:bt});\n}\n\nconst clickGenerate = (e) => {\n  let reqArray = Object.values(request);\n  if(reqArray[0] && reqArray[1] && reqArray[2]){\n    setError(false);\n  }else{\n    setError(true);\n  }\n}\n\nreturn (<>\n    <h4>API Call</h4>\n    <div style={{color: error ? 'red' : 'blue'}}>Enter all three fields!</div>\n    <div className=\"section\">\n      <fieldset style={{width: '50%'}}>\n        <legend>Create</legend>\n        <form style={{paddingTop: '2%', textAlign: 'left'}}>\n          <label htmlFor=\"toptxt\">Top </label><br></br>\n          <input type=\"text\" id=\"toptxt\" placeholder=\"Top text\" onBlur={blur}></input>\n          <br></br>\n          <label htmlFor=\"bottomtxt\">Bottom </label>\n          <br></br>\n          <input type=\"text\" id=\"bottomtxt\" placeholder=\"Bottom text\" onBlur={blur}></input>\n        </form>\n      </fieldset>\n\n\n      <fieldset style={{width: '50%'}} className='flexwrap' onClick={click}>\n        <legend>Choose</legend>\n        {imageArray.map((i,j) => {\n          return(<div key={j} style={{margin:'4%', borderStyle: 'dotted', color: request.img == i ? 'red' : 'black'}}>\n            <img id={i} src={`http://apimeme.com/thumbnail?name=${i}`}></img>\n        </div>);\n        })}\n      </fieldset>\n    </div>\n    <button className='buttons' onClick={clickGenerate} style={{width: '40%', marginTop: '2%', padding:'5px'}}>Generate</button>\n  </>);\n}\n\nexport default Api;\n"]},"metadata":{},"sourceType":"module"}