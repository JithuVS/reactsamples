{"ast":null,"code":"var _jsxFileName = \"/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/components/DragDrop.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst horizontal = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap'\n};\nconst vertical = {};\n\nfunction DragDrop(props) {\n  _s();\n\n  const [completed, setCompletedTask] = useState(props.completedArray);\n  const [progress, setProgressTask] = useState(props.pendingArray);\n\n  const onDragStart = (ev, id) => {\n    console.log('dragstart:', id);\n    ev.dataTransfer.setData(\"id\", id);\n  };\n\n  const onDragOver = ev => {\n    ev.preventDefault();\n  };\n\n  const onDrop = (ev, cat) => {\n    let id = ev.dataTransfer.getData(\"id\");\n    let tasks = progress.filter(task => {\n      if (task.name == id) {\n        task.category = cat;\n        return task;\n      }\n    });\n    setCompletedTask([...completed, ...tasks]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Drag Drop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        onDragOver: e => onDragOver(e),\n        onDrop: e => {\n          onDrop(e, \"progress\");\n        },\n        children: progress.map((t, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onDragStart: e => onDragStart(e, t.name),\n          draggable: true,\n          className: \"draggable\",\n          style: {\n            backgroundColor: t.bgcolor\n          },\n          children: t.name\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"complete\",\n        style: props.horizontal ? horizontal : vertical,\n        onDragOver: e => onDragOver(e),\n        onDrop: e => onDrop(e, \"complete\"),\n        children: completed.map((t, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onDragStart: e => onDragStart(e, t.name),\n            draggable: true,\n            className: \"draggable\",\n            style: {\n              backgroundColor: t.bgcolor\n            },\n            children: t.name\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DragDrop, \"Hpr4XIC2f1EfG0GdZdcK1sIXAh4=\");\n\n_c = DragDrop;\nexport default DragDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"sources":["/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/components/DragDrop.js"],"names":["useState","horizontal","display","flexDirection","flexWrap","vertical","DragDrop","props","completed","setCompletedTask","completedArray","progress","setProgressTask","pendingArray","onDragStart","ev","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasks","filter","task","name","category","e","map","t","i","backgroundColor","bgcolor"],"mappings":"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","sourcesContent":["import {useState} from 'react';\n\nconst horizontal = {\n  display: 'flex', flexDirection: 'row', flexWrap: 'wrap'\n}\n\nconst vertical = {}\n\nfunction DragDrop(props) {\n  const [completed, setCompletedTask] = useState(props.completedArray);\n  const [progress, setProgressTask] = useState(props.pendingArray);\n \n  const onDragStart = (ev, id) => {\n    console.log('dragstart:',id);\n    ev.dataTransfer.setData(\"id\", id);\n  }\n\n  const onDragOver = (ev) => {\n    ev.preventDefault();\n  }\n\n  const onDrop = (ev, cat) => {\n    let id = ev.dataTransfer.getData(\"id\");\n    let tasks = progress.filter((task) => {\n        if (task.name == id) {\n            task.category = cat;\n            return task;\n        }\n    });\n    setCompletedTask([...completed,...tasks]);\n  }\n\n  return (<>\n    <h4>Drag Drop</h4>\n    <div className=\"section\">\n      <div className=\"progress\" onDragOver={(e)=>onDragOver(e)}\n                  onDrop={(e)=>{onDrop(e, \"progress\")}}>\n            {\n            progress.map ((t,i) =>\n                <div key={i}\n                    onDragStart = {(e) => onDragStart(e, t.name)}\n                    draggable\n                    className=\"draggable\"\n                    style = {{backgroundColor: t.bgcolor}}>\n                    {t.name}\n                </div>\n            )     \n           }\n      </div>\n      <div className=\"complete\" style={props.horizontal ? horizontal : vertical}\n                  onDragOver={(e)=>onDragOver(e)}\n                  onDrop={(e)=>onDrop(e, \"complete\")}>\n            {\n            completed.map ((t, i) => {\n                return (<div key={i}\n                    onDragStart = {(e) => onDragStart(e, t.name)}\n                    draggable\n                    className=\"draggable\"\n                    style = {{backgroundColor: t.bgcolor}}>\n                    {t.name}\n                </div>);\n            })     \n           }\n      </div>\n    </div>\n  </>);\n}\n\nexport default DragDrop;\n"]},"metadata":{},"sourceType":"module"}