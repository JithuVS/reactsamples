{"ast":null,"code":"var _jsxFileName = \"/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/components/DragDrop.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DragDrop(props) {\n  _s();\n\n  const [completed, setCompletedTask] = useState(props.completedArray);\n  const [progress, setProgressTask] = useState(props.pendingArray);\n\n  const onDragStart = (ev, id) => {\n    console.log('dragstart:', id);\n    ev.dataTransfer.setData(\"id\", id);\n  };\n\n  const onDragOver = ev => {\n    ev.preventDefault();\n  };\n\n  const onDrop = (ev, cat) => {\n    let id = ev.dataTransfer.getData(\"id\");\n    let tasks = progress.filter(task => {\n      if (task.name == id) {\n        task.category = cat;\n        return task;\n      }\n    });\n    setCompletedTask([...completed, ...tasks]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress\",\n      onDragOver: e => onDragOver(e),\n      onDrop: e => {\n        onDrop(e, \"progress\");\n      },\n      children: progress.map(t => /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragStart: e => onDragStart(e, t.name),\n        draggable: true,\n        className: \"draggable\",\n        style: {\n          backgroundColor: t.bgcolor\n        },\n        children: t.name\n      }, t.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"complete\",\n      style: props.horizontal ? {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n      } : '',\n      onDragOver: e => onDragOver(e),\n      onDrop: e => onDrop(e, \"complete\"),\n      children: completed.map(t => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          onDragStart: e => onDragStart(e, t.name),\n          draggable: true,\n          className: \"draggable\",\n          style: {\n            backgroundColor: t.bgcolor\n          },\n          children: t.name\n        }, t.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DragDrop, \"Hpr4XIC2f1EfG0GdZdcK1sIXAh4=\");\n\n_c = DragDrop;\nexport default DragDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"sources":["/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/components/DragDrop.js"],"names":["useState","DragDrop","props","completed","setCompletedTask","completedArray","progress","setProgressTask","pendingArray","onDragStart","ev","id","console","log","dataTransfer","setData","onDragOver","preventDefault","onDrop","cat","getData","tasks","filter","task","name","category","e","map","t","backgroundColor","bgcolor","horizontal","display","flexDirection","flexWrap"],"mappings":"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","sourcesContent":["import {useState} from 'react';\n\nfunction DragDrop(props) {\n\n  const [completed, setCompletedTask] = useState(props.completedArray);\n  const [progress, setProgressTask] = useState(props.pendingArray);\n \n  const onDragStart = (ev, id) => {\n    console.log('dragstart:',id);\n    ev.dataTransfer.setData(\"id\", id);\n  }\n\n  const onDragOver = (ev) => {\n    ev.preventDefault();\n  }\n\n  const onDrop = (ev, cat) => {\n    let id = ev.dataTransfer.getData(\"id\");\n    let tasks = progress.filter((task) => {\n        if (task.name == id) {\n            task.category = cat;\n            return task;\n        }\n    });\n    setCompletedTask([...completed,...tasks]);\n  }\n\n  return (\n    <div className=\"section\">\n      <div className=\"progress\" onDragOver={(e)=>onDragOver(e)}\n                  onDrop={(e)=>{onDrop(e, \"progress\")}}>\n            {\n            progress.map ((t) =>\n                <div key={t.name}\n                    onDragStart = {(e) => onDragStart(e, t.name)}\n                    draggable\n                    className=\"draggable\"\n                    style = {{backgroundColor: t.bgcolor}}>\n                    {t.name}\n                </div>\n            )     \n           }\n      </div>\n      <div className=\"complete\" style={props.horizontal ? {display: 'flex', flexDirection: 'row', flexWrap: 'wrap'} : ''}\n                  onDragOver={(e)=>onDragOver(e)}\n                  onDrop={(e)=>onDrop(e, \"complete\")}>\n            {\n            completed.map ((t) => {\n                return (<div key={t.name}\n                    onDragStart = {(e) => onDragStart(e, t.name)}\n                    draggable\n                    className=\"draggable\"\n                    style = {{backgroundColor: t.bgcolor}}>\n                    {t.name}\n                </div>);\n            }\n            )     \n           }\n      </div>\n    </div>\n  );\n}\n\nexport default DragDrop;\n"]},"metadata":{},"sourceType":"module"}