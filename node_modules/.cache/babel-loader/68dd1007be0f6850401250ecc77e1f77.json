{"ast":null,"code":"var _jsxFileName = \"/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/components/Api.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiUrl = {\n  tt: '',\n  bt: '',\n  id: '',\n  img: ''\n};\n\nfunction Api() {\n  _s();\n\n  const [request, setRequest] = useState(apiUrl),\n        [error, setError] = useState(false),\n        [loading, setLoading] = useState(false),\n        [generated, setGenerated] = useState(null),\n        [images, setImages] = useState(null);\n  useEffect(() => {\n    axios.get('https://api.memegen.link/images').then(response => {\n      let data = response.data;\n      setImages(data.slice(2, 8));\n      setGenerated(data[3].url);\n    });\n  }, []);\n\n  const click = e => {\n    e.preventDefault();\n    setRequest({ ...request,\n      id: e.target.id,\n      img: e.target.id.split('/')[4]\n    });\n  };\n\n  const blur = e => {\n    let id = e.target.id,\n        value = e.target.value,\n        tt = request.tt,\n        bt = request.bt;\n\n    if (id == 'toptxt') {\n      tt = value;\n    } else {\n      bt = value;\n    }\n\n    setRequest({ ...request,\n      tt: tt,\n      bt: bt\n    });\n  };\n\n  const clickGenerate = e => {\n    let reqArray = Object.values(request);\n\n    if (reqArray[0] && reqArray[1] && reqArray[2]) {\n      setLoading(true);\n      setError(false);\n      axios.get(`https://api.memegen.link/images/${reqArray[3]}/${reqArray[0]}/${reqArray[1]}.jpg`).then(response => {\n        setGenerated(response.config.url);\n        setLoading(false);\n      }).catch(error => {\n        setLoading(false);\n      });\n    } else {\n      setError(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" API Call \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: error ? 'red' : 'blue'\n      },\n      children: \" Enter all three fields! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        style: {\n          width: '50%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \" Enter \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          style: {\n            paddingTop: '2%',\n            textAlign: 'left'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"toptxt\",\n            children: \" Top \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 47\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"fields\",\n            type: \"text\",\n            id: \"toptxt\",\n            placeholder: \"Top text\",\n            onBlur: blur,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 20\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bottomtxt\",\n            children: \" Bottom \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"fields\",\n            type: \"text\",\n            id: \"bottomtxt\",\n            placeholder: \"Bottom text\",\n            onBlur: blur,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 7\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        style: {\n          width: '50%'\n        },\n        className: \"flexwrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \" Choose \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexwrap\",\n          onClick: click,\n          children: [\" \", images ? images.map((i, j) => {\n            const color = request.id == i.url ? 'blue' : 'black';\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"imageFrame\",\n              style: {\n                borderColor: color\n              },\n              id: i.url,\n              src: i.url,\n              children: \" \"\n            }, j, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 22\n            }, this);\n          }) : null, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttons\",\n      onClick: clickGenerate,\n      style: {\n        width: '40%',\n        margin: '2%',\n        padding: '5px'\n      },\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: generated,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", generated ? null : 'No images Loaded!', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Api, \"MP03PCdQlGxf5MU3qWBqk34P910=\");\n\n_c = Api;\nexport default Api;\n\nvar _c;\n\n$RefreshReg$(_c, \"Api\");","map":{"version":3,"sources":["/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/components/Api.js"],"names":["useState","useEffect","axios","apiUrl","tt","bt","id","img","Api","request","setRequest","error","setError","loading","setLoading","generated","setGenerated","images","setImages","get","then","response","data","slice","url","click","e","preventDefault","target","split","blur","value","clickGenerate","reqArray","Object","values","config","catch","color","width","paddingTop","textAlign","map","i","j","borderColor","margin","padding"],"mappings":";;;AAAA,SACEA,QADF,EAEEC,SAFF,QAGO,OAHP;AAIA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,EAAE,EAAE,EADS;AAEbC,EAAAA,EAAE,EAAE,EAFS;AAGbC,EAAAA,EAAE,EAAE,EAHS;AAIbC,EAAAA,GAAG,EAAE;AAJQ,CAAf;;AAOA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACG,MAAD,CAAtC;AAAA,QACE,CAACQ,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAD9B;AAAA,QAEE,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAFlC;AAAA,QAGE,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,IAAD,CAHtC;AAAA,QAIE,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,IAAD,CAJhC;AAOAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACiB,GAAN,CAAU,iCAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,UAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACAJ,MAAAA,SAAS,CAACI,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc,CAAd,CAAD,CAAT;AACAP,MAAAA,YAAY,CAACM,IAAI,CAAC,CAAD,CAAJ,CAAQE,GAAT,CAAZ;AACD,KALH;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,KAAK,GAAIC,CAAD,IAAO;AACnBA,IAAAA,CAAC,CAACC,cAAF;AACAjB,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETH,MAAAA,EAAE,EAAEoB,CAAC,CAACE,MAAF,CAAStB,EAFJ;AAGTC,MAAAA,GAAG,EAAEmB,CAAC,CAACE,MAAF,CAAStB,EAAT,CAAYuB,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB;AAHI,KAAD,CAAV;AAKD,GAPD;;AASA,QAAMC,IAAI,GAAIJ,CAAD,IAAO;AAClB,QAAIpB,EAAE,GAAGoB,CAAC,CAACE,MAAF,CAAStB,EAAlB;AAAA,QACEyB,KAAK,GAAGL,CAAC,CAACE,MAAF,CAASG,KADnB;AAAA,QAEE3B,EAAE,GAAGK,OAAO,CAACL,EAFf;AAAA,QAGEC,EAAE,GAAGI,OAAO,CAACJ,EAHf;;AAIA,QAAIC,EAAE,IAAI,QAAV,EAAoB;AAClBF,MAAAA,EAAE,GAAG2B,KAAL;AACD,KAFD,MAEO;AACL1B,MAAAA,EAAE,GAAG0B,KAAL;AACD;;AACDrB,IAAAA,UAAU,CAAC,EACT,GAAGD,OADM;AAETL,MAAAA,EAAE,EAAEA,EAFK;AAGTC,MAAAA,EAAE,EAAEA;AAHK,KAAD,CAAV;AAKD,GAfD;;AAiBA,QAAM2B,aAAa,GAAIN,CAAD,IAAO;AAC3B,QAAIO,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc1B,OAAd,CAAf;;AACA,QAAIwB,QAAQ,CAAC,CAAD,CAAR,IAAeA,QAAQ,CAAC,CAAD,CAAvB,IAA8BA,QAAQ,CAAC,CAAD,CAA1C,EAA+C;AAC7CnB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACAV,MAAAA,KAAK,CAACiB,GAAN,CAAW,mCAAkCc,QAAQ,CAAC,CAAD,CAAI,IAAGA,QAAQ,CAAC,CAAD,CAAI,IAAGA,QAAQ,CAAC,CAAD,CAAI,MAAvF,EACGb,IADH,CAEIC,QAAQ,IAAI;AACVL,QAAAA,YAAY,CAACK,QAAQ,CAACe,MAAT,CAAgBZ,GAAjB,CAAZ;AACAV,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OALL,EAMGuB,KANH,CAOI1B,KAAK,IAAI;AACPG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OATL;AAWD,KAdD,MAcO;AACLF,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAnBD;;AAqBA,sBAAQ;AAAA,4BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAEJ;AAAK,MAAA,KAAK,EACR;AACE0B,QAAAA,KAAK,EAAE3B,KAAK,GAAG,KAAH,GAAW;AADzB,OADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFI,eAOJ;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA,8BACA;AAAU,QAAA,KAAK,EACb;AACE4B,UAAAA,KAAK,EAAE;AADT,SADF;AAAA,gCAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALA,eAMA;AAAM,UAAA,KAAK,EACT;AACEC,YAAAA,UAAU,EAAE,IADd;AAEEC,YAAAA,SAAS,EAAE;AAFb,WADF;AAAA,kCAMA;AAAO,YAAA,OAAO,EAAG,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA,eAMwC;AAAA;AAAA;AAAA;AAAA,kBANxC,eAOA;AAAO,YAAA,SAAS,EAAG,QAAnB;AACA,YAAA,IAAI,EAAG,MADP;AAEA,YAAA,EAAE,EAAG,QAFL;AAGA,YAAA,WAAW,EAAG,UAHd;AAIA,YAAA,MAAM,EACJX,IALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPA,oBAaa;AAAA;AAAA;AAAA;AAAA,kBAbb,eAcA;AAAO,YAAA,OAAO,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdA,eAeA;AAAA;AAAA;AAAA;AAAA,kBAfA,eAgBA;AAAO,YAAA,SAAS,EAAG,QAAnB;AACA,YAAA,IAAI,EAAG,MADP;AAEA,YAAA,EAAE,EAAG,WAFL;AAGA,YAAA,WAAW,EAAG,aAHd;AAIA,YAAA,MAAM,EACJA,IALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAgCA;AAAU,QAAA,KAAK,EACb;AACES,UAAAA,KAAK,EAAE;AADT,SADF;AAKA,QAAA,SAAS,EAAG,UALZ;AAAA,gCAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA,oBAO0B;AACtB,UAAA,SAAS,EAAG,UADU;AAE1B,UAAA,OAAO,EACLd,KAHwB;AAAA,0BAKxBR,MAAM,GAAGA,MAAM,CAACyB,GAAP,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1B,kBAAMN,KAAK,GAAG7B,OAAO,CAACH,EAAR,IAAcqC,CAAC,CAACnB,GAAhB,GAAsB,MAAtB,GAA+B,OAA7C;AACA,gCAAS;AAGP,cAAA,SAAS,EAAG,YAHL;AAIP,cAAA,KAAK,EACH;AACEqB,gBAAAA,WAAW,EAAEP;AADf,eALK;AASP,cAAA,EAAE,EACAK,CAAC,CAACnB,GAVG;AAYP,cAAA,GAAG,EACDmB,CAAC,CAACnB,GAbG;AAAA;AAAA,eACLoB,CADK;AAAA;AAAA;AAAA;AAAA,oBAAT;AAeC,WAjBI,CAAH,GAiBE,IAtBgB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAP1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPI,eAwEF;AAAQ,MAAA,SAAS,EAAG,SAApB;AACA,MAAA,OAAO,EACLZ,aAFF;AAIA,MAAA,KAAK,EACH;AACEO,QAAAA,KAAK,EAAE,KADT;AAEEO,QAAAA,MAAM,EAAE,IAFV;AAGEC,QAAAA,OAAO,EAAE;AAHX,OALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxEE,eAoFF;AAAA,sBACElC,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,gBACL;AAAM,QAAA,GAAG,EACPE,SADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,oBAIgB;AAAA,wBAEVA,SAAS,GAAG,IAAH,GAAU,mBAFT;AAAA;AAAA;AAAA;AAAA;AAAA,cAJhB;AAAA;AAAA;AAAA;AAAA;AAAA,YApFE;AAAA,kBAAR;AA4FO;;GA5JAP,G;;KAAAA,G;AA8JD,eAAeA,GAAf","sourcesContent":["import {\n  useState,\n  useEffect\n} from 'react';\nimport axios from 'axios';\n\nconst apiUrl = {\n  tt: '',\n  bt: '',\n  id: '',\n  img: ''\n};\n\nfunction Api() {\n  const [request, setRequest] = useState(apiUrl),\n    [error, setError] = useState(false),\n    [loading, setLoading] = useState(false),\n    [generated, setGenerated] = useState(null),\n    [images, setImages] = useState(null);\n\n\n  useEffect(() => {\n    axios.get('https://api.memegen.link/images')\n      .then(response => {\n        let data = response.data;\n        setImages(data.slice(2, 8));\n        setGenerated(data[3].url);\n      })\n  }, [])\n\n  const click = (e) => {\n    e.preventDefault();\n    setRequest({\n      ...request,\n      id: e.target.id,\n      img: e.target.id.split('/')[4]\n    });\n  }\n\n  const blur = (e) => {\n    let id = e.target.id,\n      value = e.target.value,\n      tt = request.tt,\n      bt = request.bt;\n    if (id == 'toptxt') {\n      tt = value;\n    } else {\n      bt = value;\n    }\n    setRequest({\n      ...request,\n      tt: tt,\n      bt: bt\n    });\n  }\n\n  const clickGenerate = (e) => {\n    let reqArray = Object.values(request);\n    if (reqArray[0] && reqArray[1] && reqArray[2]) {\n      setLoading(true);\n      setError(false);\n      axios.get(`https://api.memegen.link/images/${reqArray[3]}/${reqArray[0]}/${reqArray[1]}.jpg`)\n        .then(\n          response => {\n            setGenerated(response.config.url);\n            setLoading(false);\n          })\n        .catch(\n          error => {\n            setLoading(false);\n          }\n        )\n    } else {\n      setError(true);\n    }\n  }\n\n  return (<>\n      <h4 > API Call </h4>\n      <div style = {\n        {\n          color: error ? 'red' : 'blue'\n        }\n      }> Enter all three fields! </div>\n      <div className = \"section\">\n      <fieldset style = {\n        {\n          width: '50%'\n        }\n      }>\n      <legend > Enter </legend> \n      <form style = {\n        {\n          paddingTop: '2%',\n          textAlign: 'left'\n        }\n      } >\n      <label htmlFor = \"toptxt\" > Top </label><br></br >\n      <input className = 'fields'\n      type = \"text\"\n      id = \"toptxt\"\n      placeholder = \"Top text\"\n      onBlur = {\n        blur\n      } > </input> <br></br> \n      <label htmlFor = \"bottomtxt\" > Bottom </label> \n      <br></br> \n      <input className = 'fields'\n      type = \"text\"\n      id = \"bottomtxt\"\n      placeholder = \"Bottom text\"\n      onBlur = {\n        blur\n      } > </input> </form> </fieldset>\n\n\n      <fieldset style = {\n        {\n          width: '50%'\n        }\n      }\n      className = 'flexwrap' >\n      <\n      legend > Choose </legend> <\n      div className = 'flexwrap'\n      onClick = {\n        click\n      } > {\n        images ? images.map((i, j) => {\n            const color = request.id == i.url ? 'blue' : 'black';\n            return ( <img key = {\n                j\n              }\n              className = 'imageFrame'\n              style = {\n                {\n                  borderColor: color\n                }\n              }\n              id = {\n                i.url\n              }\n              src = {\n                i.url\n              } > </img>);\n            }): null\n        } </div> \n        </fieldset>\n        </div> \n        <button className = 'buttons'\n        onClick = {\n          clickGenerate\n        }\n        style = {\n          {\n            width: '40%',\n            margin: '2%',\n            padding: '5px'\n          }\n        }>Generate</button>\n\n        <div> {\n          loading ? < div > Loading... </div> :\n            < img src = {\n              generated\n            } > </img>} <\n            div > {\n              generated ? null : 'No images Loaded!'\n            } </div></div></>);\n        }\n\n        export default Api;"]},"metadata":{},"sourceType":"module"}