{"ast":null,"code":"var _jsxFileName = \"/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/redux/PostList.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport Modal from \"../components/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction PostList() {\n  _s();\n\n  const list = useSelector(state => state),\n        dispatch = useDispatch(),\n        [showModal, setShowModal] = useState(false);\n\n  const click = e => {\n    if (e.target.name == \"delete\") {\n      dispatch({\n        type: \"DELETE_POST\",\n        id: e.target.id\n      });\n    } else {}\n  };\n\n  const handleSubmit = e => {\n    this.setState({\n      name: this.state.modalInputName\n    });\n    this.modalClose();\n  };\n\n  const modalOpen = () => {\n    this.setState({\n      modal: true\n    });\n  };\n\n  const modalClose = () => {\n    this.setState({\n      modalInputName: \"\",\n      modal: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      handleClose: e => modalClose(e),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Hello Modal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: state.modalInputName,\n          name: \"modalInputName\",\n          onChange: e => handleChange(e),\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleSubmit(e),\n          type: \"button\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Post List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          onClick: click,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), list.map((post, id) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: post.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: post.id,\n                  name: \"edit\",\n                  className: \"buttons\",\n                  children: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: post.id,\n                  name: \"delete\",\n                  className: \"buttons\",\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, post.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PostList, \"fWehhve0n5LaTYSZsdcE6xAwHnQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/redux/PostList.js"],"names":["useSelector","useDispatch","useState","Modal","PostList","list","state","dispatch","showModal","setShowModal","click","e","target","name","type","id","handleSubmit","setState","modalInputName","modalClose","modalOpen","modal","handleChange","width","map","post","title","message"],"mappings":"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","sourcesContent":["import { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport Modal from \"../components/Modal\";\n\nfunction PostList() {\n  const list = useSelector((state) => state),\n    dispatch = useDispatch(),\n    [showModal, setShowModal] = useState(false);\n\n  const click = (e) => {\n    if (e.target.name == \"delete\") {\n      dispatch({\n        type: \"DELETE_POST\",\n        id: e.target.id,\n      });\n    } else {\n    }\n  };\n\n  const handleSubmit = (e) => {\n    this.setState({ name: this.state.modalInputName });\n    this.modalClose();\n  };\n\n  const modalOpen = () => {\n    this.setState({ modal: true });\n  };\n\n  const modalClose = () => {\n    this.setState({\n      modalInputName: \"\",\n      modal: false,\n    });\n  };\n\n  return (\n    <>\n      <Modal show={showModal} handleClose={(e) => modalClose(e)}>\n        <h2>Hello Modal</h2>\n        <div className=\"form-group\">\n          <label>Enter Name:</label>\n          <input\n            type=\"text\"\n            value={state.modalInputName}\n            name=\"modalInputName\"\n            onChange={(e) => handleChange(e)}\n            className=\"form-control\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <button onClick={(e) => handleSubmit(e)} type=\"button\">\n            Save\n          </button>\n        </div>\n      </Modal>\n      <div className=\"section\">\n        <fieldset style={{ width: \"100%\" }}>\n          <legend>Post List</legend>\n          <table className=\"table\" onClick={click}>\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th>Message</th>\n              </tr>\n            </thead>\n            {list.map((post, id) => {\n              return (\n                <tr key={post.id}>\n                  <td>{post.title}</td>\n                  <td>{post.message}</td>\n                  <td>\n                    <button id={post.id} name=\"edit\" className=\"buttons\">\n                      edit\n                    </button>\n                  </td>\n                  <td>\n                    <button id={post.id} name=\"delete\" className=\"buttons\">\n                      delete\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </table>\n        </fieldset>\n        {/* {showModal ? <Modal></Modal> : null} */}\n      </div>\n    </>\n  );\n}\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}