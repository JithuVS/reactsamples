{"ast":null,"code":"var _jsxFileName = \"/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/hoc/WrapperComponent.js\";\nimport axios from \"axios\";\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WrapperComponent = (Component, url) => {\n  return class extends React.Component {\n    constructor(...args) {\n      super(...args);\n      this.state = {\n        data: null\n      };\n    }\n\n    componentDidMount() {\n      axios(url).then(response => {\n        let data = response.data;\n      });\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(Component, {\n        children: this.props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    }\n\n  };\n};\n\n_c = WrapperComponent;\nexport default WrapperComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"WrapperComponent\");","map":{"version":3,"sources":["/home/sreejith.s@ah.zymrinc.com/sreejith/first-app-on-ubuntu/src/hoc/WrapperComponent.js"],"names":["axios","React","useEffect","WrapperComponent","Component","url","state","data","componentDidMount","then","response","render","props","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB;AAC3C,SAAO,cAAcJ,KAAK,CAACG,SAApB,CAA8B;AAAA;AAAA;AAAA,WACnCE,KADmC,GAC3B;AACNC,QAAAA,IAAI,EAAE;AADA,OAD2B;AAAA;;AAKnCC,IAAAA,iBAAiB,GAAG;AAClBR,MAAAA,KAAK,CAACK,GAAD,CAAL,CAAWI,IAAX,CAAiBC,QAAD,IAAc;AAC5B,YAAIH,IAAI,GAAGG,QAAQ,CAACH,IAApB;AACD,OAFD;AAGD;;AAEDI,IAAAA,MAAM,GAAG;AACP,0BAAO,QAAC,SAAD;AAAA,kBAAY,KAAKC,KAAL,CAAWC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAbkC,GAArC;AAeD,CAhBD;;KAAMV,gB;AAkBN,eAAeA,gBAAf","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect } from \"react\";\n\nconst WrapperComponent = (Component, url) => {\n  return class extends React.Component {\n    state = {\n      data: null,\n    };\n\n    componentDidMount() {\n      axios(url).then((response) => {\n        let data = response.data;\n      });\n    }\n\n    render() {\n      return <Component>{this.props.name}</Component>;\n    }\n  };\n};\n\nexport default WrapperComponent;\n"]},"metadata":{},"sourceType":"module"}